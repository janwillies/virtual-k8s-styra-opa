apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xcluster.cnp.example.org
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: cnp.example.org/v1alpha1
    kind: XCluster
  resources:
    - name: vcluster-helm-release
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations:
            crossplane.io/external-name: # patched
        spec:
          rollbackLimit: 3
          forProvider:
            namespace: # patched
            chart:
              name: vcluster
              repository: https://charts.loft.sh
              version: "0.4.4"
            values:
              vcluster:
                image: rancher/k3s:v1.19.5-k3s2 
                extraArgs:
                  - --service-cidr=10.96.0.0/12
              syncer:
                extraArgs: [] # patched
              #     - --out-kube-config-server=https://cluster-1.cluster-1.svc
              #     - --tls-san=cluster-1.cluster-1.svc
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.namespace
          policy:
            fromFieldPath: Required
        - fromFieldPath: metadata.name
          toFieldPath: metadata.annotations[crossplane.io/external-name]
          policy:
            fromFieldPath: Required
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-vcluster"
        - type: CombineFromComposite
          combine:
            variables:
            - fromFieldPath: metadata.name
            - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "--out-kube-config-server=https://%s.%s.svc"
          toFieldPath: spec.forProvider.values.syncer.extraArgs[0]
        - type: CombineFromComposite
          combine:
            variables:
            - fromFieldPath: metadata.name
            - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "--tls-san=%s.%s.svc"
          toFieldPath: spec.forProvider.values.syncer.extraArgs[1]
    - name: helm-providerconfig
      base:
        apiVersion: helm.crossplane.io/v1alpha1
        kind: ProviderConfig
        spec:
          credentials:
            source: Secret
            secretRef:
              name: # patched
              namespace: # patched
              key: config
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.credentials.secretRef.name
          transforms:
            - type: string
              string:
                fmt: vc-%s
        - fromFieldPath: metadata.name
          toFieldPath: spec.credentials.secretRef.namespace
        - fromFieldPath: metadata.uid
          toFieldPath: metadata.name
    - name: kubernetes-providerconfig
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: ProviderConfig
        spec:
          credentials:
            source: Secret
            secretRef:
              name: # patched
              namespace: # patched
              key: config
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.credentials.secretRef.name
          transforms:
            - type: string
              string:
                fmt: vc-%s
        - fromFieldPath: metadata.name
          toFieldPath: spec.credentials.secretRef.namespace
        - fromFieldPath: metadata.uid
          toFieldPath: metadata.name
    - name: styra-system
      base:
        apiVersion: styra.crossplane.io/v1alpha1
        kind: System
        metadata:
          name: # patched
        spec:
          forProvider:
            name: # patched
            type: kubernetes:v2
          writeConnectionSecretToRef:
            namespace: crossplane-system
            name: # patched
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.name
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
        - fromFieldPath: "metadata.name"
          toFieldPath: "spec.writeConnectionSecretToRef.name"
          transforms:
            - type: string
              string:
                fmt: "%s-styra"
    - name: kube-system-namespace
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: Namespace
              metadata:
                name: kube-system
                labels:
                  openpolicyagent.org/webhook: ignore
      patches:
        - fromFieldPath: metadata.uid
          toFieldPath: spec.providerConfigRef.name
    - name: styra-helm-release
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        spec:
          rollbackLimit: 3
          forProvider:
            namespace: styra-system
            chart:
              name: styra-k8s-system
              repository: http://chartmuseum.chartmuseum.svc:8080/
              version: "0.5.4"
            valuesFrom:
              - secretKeyRef:
                  name: # patched
                  namespace: crossplane-system
                  key: helmValues
                  optional: false
      patches:
        - fromFieldPath: metadata.uid
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: metadata.name
          toFieldPath: "spec.forProvider.valuesFrom[0].secretKeyRef.name"
          transforms:
            - type: string
              string:
                fmt: "%s-styra"
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-styra-k8s-system"